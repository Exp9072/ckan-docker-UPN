version: "3"

volumes:
  ckan_storage:
  pg_data:
  solr_data:

services:
  nginx:
    container_name: ${NGINX_CONTAINER_NAME}
    build:
      context: nginx/
      dockerfile: Dockerfile
    networks:
      - webnet
      - ckannet
    depends_on:
      ckan:
        condition: service_healthy
    ports:
      - "0.0.0.0:${NGINX_PORT_HOST}:${NGINX_PORT}"  # Change SSL port to non-SSL port
    deploy:
      resources: 
        limits:
          memory: 650M
    
  ckan:
    container_name: ${CKAN_CONTAINER_NAME}
    build:
      context: ckan/
      dockerfile: Dockerfile
      args:
        - TZ=${TZ}
    networks:
      - ckannet
      - dbnet
      - solrnet
      - redisnet
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      solr:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ckan_storage:/var/lib/ckan
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000"]
    deploy:
      resources: 
        limits:
          memory: 250M

  datapusher:
    container_name: ${DATAPUSHER_CONTAINER_NAME}
    networks:
      - ckannet
      - dbnet
    image: ckan/ckan-base-datapusher:${DATAPUSHER_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8800"]
    deploy:
      resources: 
        limits:
          memory: 100M

  db:
    container_name: ${POSTGRESQL_CONTAINER_NAME}
    build:
      context: postgresql/
    networks:
      - dbnet
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - CKAN_DB_USER
      - CKAN_DB_PASSWORD
      - CKAN_DB
      - DATASTORE_READONLY_USER
      - DATASTORE_READONLY_PASSWORD
      - DATASTORE_DB
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
    deploy:
      resources: 
        limits:
          memory: 200M
     
  solr:
    container_name: ${SOLR_CONTAINER_NAME}
    networks:
      - solrnet
    image: ckan/ckan-solr:${SOLR_IMAGE_VERSION}
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]
    deploy:
      resources: 
        limits:
          memory: 550M

  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: redis:${REDIS_VERSION}
    networks:
      - redisnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]
    deploy:
      resources: 
        limits:
          memory: 250M
    
networks:
  webnet:
  ckannet:
  solrnet:
    internal: true
  dbnet:
    internal: true
  redisnet:
    internal: true
